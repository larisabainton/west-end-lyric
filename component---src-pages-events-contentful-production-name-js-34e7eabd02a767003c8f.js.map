{"version":3,"file":"component---src-pages-events-contentful-production-name-js-34e7eabd02a767003c8f.js","mappings":"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","sources":["webpack://gatsby-starter-minimal/./src/components/ticketsButton.jsx","webpack://gatsby-starter-minimal/./src/functions/getPathForPersonnel.js","webpack://gatsby-starter-minimal/./src/components/events/CastList.jsx","webpack://gatsby-starter-minimal/./src/components/events/EventDates.jsx","webpack://gatsby-starter-minimal/./node_modules/react-intersection-observer/index.mjs","webpack://gatsby-starter-minimal/./src/components/events/Navigation.jsx","webpack://gatsby-starter-minimal/./src/components/events/Venues.jsx","webpack://gatsby-starter-minimal/./src/pages/events/{ContentfulProduction.name}.js"],"sourcesContent":["import React from \"react\";\n\nconst TicketsButton = ({ ticketsLink, id }) => {\n    if (!ticketsLink) {\n        return;\n    }\n\n    return (\n        <div className=\"tickets-button\" id={id}>\n            <a target=\"_blank\" rel=\"noreferrer\" href={ticketsLink}>Get Tickets</a>\n        </div>\n    )\n}\n\nexport default TicketsButton;","const getPathForPersonnel = (name, pages) => {\n    const page = pages.find(page => page.node.pageContext && page.node.pageContext.name === name)\n\n    return page.node.path;\n};\n\nexport default getPathForPersonnel;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport getPathForPersonnel from \"../../functions/getPathForPersonnel\";\n\n\n// only list performance dates for multiple performances\nconst getCastDates = (numberOfEvents, datesArray) => {\n    if (numberOfEvents > 1) {\n        return (\n            <div className=\"cast-member_dates\">\n                <div>Performing</div>\n                <div>{datesArray.join(\", \")}</div>\n            </div>\n        )\n    }\n}\n\nconst getCastList = (events, pages) => {\n    const castList = [];\n    \n    events.forEach(event => {\n       return event.roles && event.roles.forEach(role => {\n            const existingEntry = castList.find(entry => entry && entry.name == role.castMember.name); // eslint-disable-line\n\n            if (existingEntry) {\n                existingEntry.dates.push(event.eventDate)\n            } else {\n                castList.push({ \n                    roleName: role.roleName, \n                    name: role.castMember.name,\n                    headshot: role.castMember.headshot,\n                    dates: [ event.eventDate ],\n                    link: getPathForPersonnel(role.castMember.name, pages),\n                })\n            }\n       })\n    })\n\n    if (castList.length) {\n        castList.sort((a, b) => {\n            if(a.roleName < b.roleName) { return -1; }\n            if(a.roleName > b.roleName) { return 1; }\n            return 0;\n        });\n    }\n\n    return castList;\n}\n\nconst getCast = (events, pages) => {\n    const castList = getCastList(events, pages);\n    \n    if (castList) {\n        return (\n            <div className=\"cast-section\">\n                <div className=\"production_artists_cast-title section-title\">Cast</div>\n                <ul className=\"cast-list\">\n                    {castList.map(({ name, roleName, headshot, dates, link}, i) => {\n                        const datesArray = dates.sort().map(date => new Date(date).toLocaleDateString(\"en-US\", { month: 'short', day: 'numeric'}));\n                        const image = getImage(headshot);\n                        return (\n                            <li className=\"cast-member artist\" key={`cast-member-${i}`}>\n                                <GatsbyImage className=\"circular-headshot\" image={image} alt={`${name} headshot`}/>\n                                <div className=\"artist-text\">\n                                    <div className=\"cast-member_role\">{roleName}</div>\n                                    <Link className=\"cast-member_name artist-name\"to={link}>{name}</Link>\n                                    {getCastDates(events.length, datesArray)}\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n            \n        )\n    }\n}\n\nconst getStaff = (staffArray, pages) => {\n    if (staffArray && staffArray.length) {\n        return (\n            <div className=\"staff-section\">\n                <div className=\"production_artists_staff-title section-title\">Creative Team</div>\n                <ul className=\"staff\">\n                    {staffArray.sort((staff1, staff2) => staff1.title - staff2.title)\n                    .map((staff, i) => {\n                        const name = staff.personnel.name;\n                        const image = getImage(staff.personnel.headshot)\n                        const title = staff.title;\n                        const link = getPathForPersonnel(name, pages);\n\n                        return (\n                            <li className=\"staff-member_info artist\" key={`staff-member-${i}`}>\n                                <GatsbyImage className=\"circular-headshot\" image={image} alt={`${name} headshot`}/>\n                                <div className=\"artist-text\">\n                                    <div className=\"staff-member_title\">{title}</div>\n                                    <Link to={link} className=\"staff-member_name artist-name\">{name}</Link>\n                                </div>\n                                \n                            </li>\n                    )})}\n                </ul>\n            </div>\n            \n        )\n        }\n    }\n\n\nconst CastList = ({ events, staff, pages }) => {\n    if (!events[0].roles) {\n        return;\n    }\n    \n    return (\n        <div className=\"production_artists\" id=\"#production-artists\">\n            {getStaff(staff, pages)}\n            {getCast(events, pages)}\n        </div>\n    )\n};\n\nexport default CastList;","import React from \"react\";\nimport TicketsButton from \"../ticketsButton\";\n\nconst getTickets = ticketsLink => {\n    if (ticketsLink) {\n        return <TicketsButton ticketsLink={ticketsLink} />\n    }\n}\n\nconst getDate = eventDate => {\n    const date = new Date(eventDate);\n\n    const dateOptions = {\n        month: 'short',\n        day: 'numeric',\n    }\n\n    const timeOptions = {\n        hour12: true,\n        hour: 'numeric',\n        minute: 'numeric',\n    }\n    return (\n        <div className=\"event_date-container\">\n            <div className=\"event_date\">{date.toLocaleDateString(\"en-US\", dateOptions)} at {date.toLocaleTimeString(\"en-US\", timeOptions)}</div>\n        </div>\n        \n    )\n    \n}\n\nconst EventDates = ({ events }) => {\n    \n    if (!events.length) {\n        return;\n    }\n    \n    return (\n        <div className=\"production_dates\">\n            {events\n            .sort((node1, node2) => new Date(node1.eventDate) - new Date(node2.eventDate))\n            .map(({ eventDate, ticketsLink }, i) => {\n                return (\n                    <div className=\"event_date\" key={`event_date-${i}`}>\n                        {getDate(eventDate)}\n                        {getTickets(ticketsLink)}\n                    </div>\n                )\n            })}\n        </div>\n    )\n};\n\nexport default EventDates;","\"use client\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/InView.tsx\nimport * as React from \"react\";\n\n// src/observe.ts\nvar observerMap = /* @__PURE__ */ new Map();\nvar RootIds = /* @__PURE__ */ new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = void 0;\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\nfunction getRootId(root) {\n  if (!root)\n    return \"0\";\n  if (RootIds.has(root))\n    return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(\n    (key) => options[key] !== void 0\n  ).map((key) => {\n    return `${key}_${key === \"root\" ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\nfunction createObserver(options) {\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n  if (!instance) {\n    const elements = /* @__PURE__ */ new Map();\n    let thresholds;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        var _a;\n        const inView = entry.isIntersecting && thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          entry.isVisible = inView;\n        }\n        (_a = elements.get(entry.target)) == null ? void 0 : _a.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n  return instance;\n}\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === \"undefined\" && fallbackInView !== void 0) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {\n    };\n  }\n  const { id, observer, elements } = createObserver(options);\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    callbacks.splice(callbacks.indexOf(callback), 1);\n    if (callbacks.length === 0) {\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n    if (elements.size === 0) {\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\n// src/InView.tsx\nfunction isPlainChildren(props) {\n  return typeof props.children !== \"function\";\n}\nvar InView = class extends React.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"node\", null);\n    __publicField(this, \"_unobserveCb\", null);\n    __publicField(this, \"handleNode\", (node) => {\n      if (this.node) {\n        this.unobserve();\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          this.setState({ inView: !!this.props.initialInView, entry: void 0 });\n        }\n      }\n      this.node = node ? node : null;\n      this.observeNode();\n    });\n    __publicField(this, \"handleChange\", (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        this.unobserve();\n      }\n      if (!isPlainChildren(this.props)) {\n        this.setState({ inView, entry });\n      }\n      if (this.props.onChange) {\n        this.props.onChange(inView, entry);\n      }\n    });\n    this.state = {\n      inView: !!props.initialInView,\n      entry: void 0\n    };\n  }\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n  componentWillUnmount() {\n    this.unobserve();\n  }\n  observeNode() {\n    if (!this.node || this.props.skip)\n      return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay\n      },\n      fallbackInView\n    );\n  }\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children\n    );\n  }\n};\n\n// src/useInView.tsx\nimport * as React2 from \"react\";\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _a;\n  const [ref, setRef] = React2.useState(null);\n  const callback = React2.useRef();\n  const [state, setState] = React2.useState({\n    inView: !!initialInView,\n    entry: void 0\n  });\n  callback.current = onChange;\n  React2.useEffect(\n    () => {\n      if (skip || !ref)\n        return;\n      let unobserve;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry\n          });\n          if (callback.current)\n            callback.current(inView, entry);\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            unobserve();\n            unobserve = void 0;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay\n        },\n        fallbackInView\n      );\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay\n    ]\n  );\n  const entryTarget = (_a = state.entry) == null ? void 0 : _a.target;\n  const previousEntryTarget = React2.useRef();\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: void 0\n    });\n  }\n  const result = [setRef, state.inView, state.entry];\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\nexport {\n  InView,\n  defaultFallbackInView,\n  observe,\n  useInView\n};\n//# sourceMappingURL=index.mjs.map","import React from 'react';\nimport { Link } from 'gatsby';\nimport { useInView } from \"react-intersection-observer\";\nimport TicketsButton from \"../ticketsButton\";\n\nconst onChange = (inView, entry) => {\n    const navbar = document.getElementById(\"production_navigation\");\n    const ticketsButton = document.getElementById(\"navbar-tickets\");\n\n    if (entry.boundingClientRect.bottom <= 0) {\n        navbar.classList.add('sticky');\n\n        if (ticketsButton) {\n            ticketsButton.classList.add('visible');\n            ticketsButton.classList.remove('not-visible');\n        }\n    } else if (entry.boundingClientRect.bottom > 0) {\n        navbar.classList.remove('sticky');\n\n        if (ticketsButton) {\n            ticketsButton.classList.add('not-visible')\n            ticketsButton.classList.remove('visible')\n        }\n        \n    }\n}\n\nconst Navigation = ({ ticketsLink }) => {\n    const { ref } = useInView({ onChange })\n\n    if (!ticketsLink) {\n        return;\n    }\n\n    return (\n        <div className=\"navigation-wrapper\" ref={ref}>\n            <div className=\"production_navigation\" id=\"production_navigation\">\n                <div className=\"production_navigation_links\">\n                    <Link to=\"#production_about\">About</Link> |\n                    <Link to=\"#production_artists\">Artists</Link> |\n                    <Link to=\"#production_venues\">Venue</Link>\n                </div>\n                <TicketsButton ticketsLink={ticketsLink} id={\"navbar-tickets\"}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation;","import { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\n// only list date if there are multiple venues\nconst listDate = (oneVenue, eventDate) => {\n    if (!oneVenue) {\n        return <div>{new Date(eventDate).toLocaleDateString(\"en-US\", { month: 'short', day: 'numeric'})}</div>\n    }\n}\n\nconst Venues = ({ events }) => {\n    const oneVenue = events.every(({ venue }) => venue.name === events[0].venue.name)\n\n    return (\n        <div className=\"production_venues\" id=\"production_venues\">\n            <div className=\"production_venues_title section-title\">{ oneVenue ? \"Venue\" : \"Venues\" }</div>\n            <ul className=\"production_venues_list\">\n                {events.sort((event1,event2) => new Date(event1.eventDate) - new Date(event2.eventDate))\n                        .map(({ venue, eventDate }, i) => {\n                    const { name, address, website, photo } = venue;\n                    \n                    return (\n                        <li className=\"production_venues_list-item\" key={`production-venue-${i}`}>\n                            <GatsbyImage className=\"venue_image\" image={getImage(photo)} alt={`${name} image`}/>\n                            <a className=\"production_venue-name\" href={website}>{name}</a>\n                            <div className=\"production_venue-address\">{address}</div>\n                            {listDate(oneVenue, eventDate)}\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Venues;","import React from \"react\";\nimport '../../style/main.scss';\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { renderRichText } from 'gatsby-source-contentful/rich-text';\n\nimport Layout from \"../../components/layout.jsx\";\nimport CastList from \"../../components/events/CastList\";\nimport EventDates from \"../../components/events/EventDates.jsx\";\nimport Navigation from \"../../components/events/Navigation.jsx\";\nimport Venues from \"../../components/events/Venues.jsx\";\n\nconst getCoverPhoto = productionPhoto => {\n    return productionPhoto && <GatsbyImage className=\"production_cover-photo\" image= {getImage(productionPhoto)} style={{position: \"absolute\"}} alt=\"\"/>\n}\n\nconst Production = ({ data }) => {\n    const production = data.contentfulProduction;\n    const pages = data.allSitePage.edges;\n\n    const { events, longDescription, name, productionPhoto, staff } = production;\n\n    return (\n        <Layout>\n            <main className=\"production-page\">\n                {getCoverPhoto(productionPhoto)}\n                <div className=\"production_title\">{name}</div>\n                <EventDates events={events} />\n                <Navigation ticketsLink ={events[0].ticketsLink} />\n                <div className=\"production_about\" id=\"production_about\">\n                    {longDescription && renderRichText(longDescription)}\n                </div>\n                <CastList pages={pages} events={events} staff={staff}/>\n                <Venues events={events} />\n            </main>\n        </Layout>\n    )\n}\n\nexport default Production;\n\nexport const Head = ({ data }) => <title>{`West End Lyric | ${data.contentfulProduction.name}`}</title>\n\nexport const query = graphql`\n    query ($id: String!) {\n        contentfulProduction(id: {eq: $id}) {\n            name\n            productionPhoto {\n                    gatsbyImageData\n                }\n            longDescription {\n                    raw\n                }\n            shortDescription {\n                raw\n            }\n            staff {\n                title\n                personnel {\n                    name\n                    headshot {\n                        gatsbyImageData\n                    }\n                }\n            }\n            events {\n                eventDate\n                ticketsLink\n                venue {\n                    name\n                    website\n                    address\n                    photo {\n                        gatsbyImageData\n                    }\n                }\n            roles {\n                roleName\n                castMember {\n                    name\n                    headshot {\n                        gatsbyImageData\n                    }\n                }\n            }\n            \n            }\n        }\n        allSitePage(filter: {path: {regex: \"/personnel/\"}}) {\n            edges {\n              node {\n                path\n                pageContext\n              }\n            }\n          }\n    }\n`"],"names":["ticketsLink","id","className","target","rel","href","name","pages","find","page","node","pageContext","path","getCast","events","castList","forEach","event","roles","role","existingEntry","entry","castMember","dates","push","eventDate","roleName","headshot","link","getPathForPersonnel","length","sort","a","b","getCastList","map","i","datesArray","date","Date","toLocaleDateString","month","day","image","getImage","key","G","alt","Link","to","numberOfEvents","join","getCastDates","staff","staffArray","staff1","staff2","title","personnel","getStaff","node1","node2","toLocaleTimeString","hour12","hour","minute","getDate","getTickets","__defProp","Object","defineProperty","__publicField","obj","value","enumerable","configurable","writable","__defNormalProp","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","keys","filter","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","thresholds","entries","_a","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","splice","indexOf","delete","unobserve","size","disconnect","onChange","navbar","document","getElementById","ticketsButton","bottom","classList","add","remove","ref","delay","rootMargin","triggerOnce","skip","initialInView","setRef","state","setState","current","entryTarget","previousEntryTarget","result","useInView","oneVenue","every","venue","event1","event2","address","website","photo","listDate","data","production","contentfulProduction","allSitePage","edges","longDescription","productionPhoto","style","position","getCoverPhoto","renderRichText","Head"],"sourceRoot":""}